{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bradl\\\\Desktop\\\\Projects\\\\React-Adapt-Improvise\\\\react-adapt-improvise\\\\src\\\\components\\\\Nav\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NavBar() {\n  _s();\n\n  const [expand, updateExpanded] = useState(false);\n  const [navColour, updateNavbar] = useState(false);\n\n  function scrollHandler() {\n    if (window.scrollY >= 20) {\n      updateNavbar(true);\n    } else {\n      updateNavbar(false);\n    }\n  }\n\n  window.addEventListener(\"scroll\", scrollHandler);\n  return /*#__PURE__*/_jsxDEV(Navbar, {\n    expanded: expand,\n    fixed: \"top\",\n    expand: \"md\",\n    className: navColour ? \"sticky\" : \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Brad Evans\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n        \"aria-controls\": \"responsive-navbar-nav\",\n        onClick: () => {\n          updateExpanded(expand ? false : \"expanded\");\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n        id: \"responsive-navbar-nav\",\n        children: /*#__PURE__*/_jsxDEV(Nav, {\n          className: \"ml-auto\",\n          defaultActiveKey: \"#home\",\n          children: /*#__PURE__*/_jsxDEV(Nav.Item, {\n            children: /*#__PURE__*/_jsxDEV(Nav.link, {\n              as: Link,\n              to: \"/\",\n              onClick: () => updateEpanded(false),\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NavBar, \"2HiY7QGD1sFefqCETswbj+PtRZs=\");\n\n_c = NavBar;\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["C:/Users/bradl/Desktop/Projects/React-Adapt-Improvise/react-adapt-improvise/src/components/Nav/index.js"],"names":["React","useState","Navbar","Nav","NavBar","expand","updateExpanded","navColour","updateNavbar","scrollHandler","window","scrollY","addEventListener","Link","updateEpanded"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd,QAAM,CAACC,MAAD,EAASC,cAAT,IAA2BL,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,KAAD,CAA1C;;AAEA,WAASQ,aAAT,GAAyB;AACrB,QAAIC,MAAM,CAACC,OAAP,IAAkB,EAAtB,EAA0B;AACtBH,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH,KAFD,MAEO;AACHA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ;;AACDE,EAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,aAAlC;AACA,sBACI,QAAC,MAAD;AACA,IAAA,QAAQ,EAAEJ,MADV;AAEA,IAAA,KAAK,EAAC,KAFN;AAGA,IAAA,MAAM,EAAC,IAHP;AAIA,IAAA,SAAS,EAAEE,SAAS,GAAG,QAAH,GAAc,QAJlC;AAAA,2BAMI,QAAC,SAAD;AAAA,8BACI,QAAC,MAAD,CAAQ,KAAR;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,MAAD,CAAQ,MAAR;AACA,yBAAc,uBADd;AAEA,QAAA,OAAO,EAAE,MAAM;AACXD,UAAAA,cAAc,CAACD,MAAM,GAAG,KAAH,GAAW,UAAlB,CAAd;AACH;AAJD;AAAA;AAAA;AAAA;AAAA,cAJJ,eAWI,QAAC,MAAD,CAAQ,QAAR;AAAiB,QAAA,EAAE,EAAC,uBAApB;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,SAAf;AAAyB,UAAA,gBAAgB,EAAC,OAA1C;AAAA,iCACI,QAAC,GAAD,CAAK,IAAL;AAAA,mCACI,QAAC,GAAD,CAAK,IAAL;AAAU,cAAA,EAAE,EAAEQ,IAAd;AAAoB,cAAA,EAAE,EAAC,GAAvB;AAA2B,cAAA,OAAO,EAAE,MACpCC,aAAa,CAAC,KAAD,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GA3CQV,M;;KAAAA,M;AA6CT,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\n\r\nfunction NavBar() {\r\n    const [expand, updateExpanded] = useState(false);\r\n    const [navColour, updateNavbar] = useState(false);\r\n\r\n    function scrollHandler() {\r\n        if (window.scrollY >= 20) {\r\n            updateNavbar(true);\r\n        } else { \r\n            updateNavbar(false);\r\n        }\r\n    }\r\n    window.addEventListener(\"scroll\", scrollHandler);\r\n    return (\r\n        <Navbar\r\n        expanded={expand}\r\n        fixed=\"top\"\r\n        expand=\"md\"\r\n        className={navColour ? \"sticky\" : \"navbar\"}\r\n        >\r\n            <Container>\r\n                <Navbar.Brand> \r\n                    <p>Brad Evans</p>\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle\r\n                aria-controls=\"responsive-navbar-nav\"\r\n                onClick={() => {\r\n                    updateExpanded(expand ? false : \"expanded\");\r\n                }}>\r\n\r\n                </Navbar.Toggle>\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"ml-auto\" defaultActiveKey=\"#home\">\r\n                        <Nav.Item>\r\n                            <Nav.link as={Link} to=\"/\" onClick={() => \r\n                            updateEpanded(false)}>\r\n                                Home\r\n                            </Nav.link>\r\n                        </Nav.Item>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    )\r\n}\r\n\r\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}