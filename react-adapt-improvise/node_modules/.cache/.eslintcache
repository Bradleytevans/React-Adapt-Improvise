[{"C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\index.js":"1","C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\reportWebVitals.js":"2","C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\App.js":"3","C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\pages\\Contact.js":"4","C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\pages\\AboutMe.js":"5","C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\components\\navbar.js":"6","C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\components\\Navbar.js":"7"},{"size":500,"mtime":1642379668714,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":1642379668936,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1642970675578,"results":"11","hashOfConfig":"9"},{"size":1918,"mtime":1642970588588,"results":"12","hashOfConfig":"9"},{"size":514,"mtime":1642970230156,"results":"13","hashOfConfig":"9"},{"size":231,"mtime":1642970491818,"results":"14","hashOfConfig":"9"},{"size":231,"mtime":1642970491818,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1hr6nti",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\index.js",[],["33","34"],"C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\reportWebVitals.js",[],"C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\App.js",[],"C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\pages\\Contact.js",["35"],"import React, { useState } from 'react';\r\n\r\n\r\nfunction ContactForm() {\r\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\r\n\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const { name, email, message } = formState;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!errorMessage) {\r\n      console.log('Submit Form', formState);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.name === 'email') {\r\n      const isValid = validateEmail(e.target.value);\r\n      if (!isValid) {\r\n        setErrorMessage('Your email is invalid.');\r\n      } else {\r\n        setErrorMessage('');\r\n      }\r\n    } else {\r\n      if (!e.target.value.length) {\r\n        setErrorMessage(`${e.target.name} is required.`);\r\n      } else {\r\n        setErrorMessage('');\r\n      }\r\n    }\r\n    if (!errorMessage) {\r\n      setFormState({ ...formState, [e.target.name]: e.target.value });\r\n      console.log('Handle Form', formState);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section>\r\n      <h1 data-testid=\"h1tag\">Contact me</h1>\r\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email address:</label>\r\n          <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"message\">Message:</label>\r\n          <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\r\n        </div>\r\n        {errorMessage && (\r\n          <div>\r\n            <p className=\"error-text\">{errorMessage}</p>\r\n          </div>\r\n        )}\r\n        <button data-testid=\"button\" type=\"submit\">Submit</button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n",["36","37"],"C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\pages\\AboutMe.js",[],"C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\components\\navbar.js",[],"C:\\Users\\bradl\\Desktop\\Projects\\React-Adapt-Improvise\\react-adapt-improvise\\src\\components\\Navbar.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":2,"message":"43","line":19,"column":23,"nodeType":"44","messageId":"45","endLine":19,"endColumn":36},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-undef","'validateEmail' is not defined.","Identifier","undef",["48"],["49"],"no-global-assign","no-unsafe-negation"]